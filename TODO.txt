https://maah.gitbooks.io/discord-bots/content/storing-data/using-sql.html

- NOTE: if commands are called by people in another timezone, the event time will be constructed on the local machine
        and timezone info will be assumed to be that of the local machine.

        So, all times given to the bot will be assumed to be in PST. Not sure how to deal with this other than getting
        people to put in times as unix times. But it's not a big deal

- IMPLEMENT: edit_event()   # I have no idea what functionality this should have
             If allow for changing time, must restart the confirm_maybe_loop() with a new value

- ISSUE: $help does not work in private channel
    ->  await destination.send(page)
    AttributeError: 'Object' object has no attribute 'send'
    where destination should be the ctx of $help

    (but sometimes it does! like right now)

- CHANGE:   move the user-defined global variables into a different file (config.txt)
            then populate those user-defined global vars in on_ready()

- IMPLEMENT: get a profile pic for the bot

- CHANGE:   DEPRECATED FOR NOW (was not received well)
            - When the fields become long, the buttons will be far below the event message.
            - soln: make the buttons be above the event message
                blankMsg = await ctx.send('')
                eventMsg = await ctx.send(embed=eventEmbed)
                view = EventButtons(eventMsg)
                await blankMsg.edit(view=view)
                - then, when deleting event, would have to remove the view from this instead of eventMessage

- CHANGE:   the CSV can probably be formatted a little more conveniently. Leave out duplicate info like class, unit
            within certain categories? since they are always the same.

- IDEA: could make the delete/finalize event confirmation just require a react instead of typing "confirm"

- IMPLEMENT: store all database entries in memory to reduce database accessing. make sure it is always synced with
             database (do some error checking stuff, only update the memory copy if database write is successful)
                - on_ready() should repopulate the memory copy of database (or reload_memory.py if I implement that)

- IDEA:     do I have to consider memory "leaks"? examples:
                - should I be explicitly deleting old instances of EventButtons() once the event closes?
                - should I be explicitly deleting instances of ProfessionMenuView()?


---------PRIORITY--------------

- IMPLEMENT:    $bug DM command for reporting issues or bugs. Bot will log $bug in bugreports.log

- IMPLEMENT: add a short user-specific cooldown to all commands (e.g. 2 in 5 seconds would be nice)

- CHANGE: make csv not include certain redundant cols to make it shorter (class, unit for the single units)
            after doing so, will need to redo some alignment stuff

- IMPLEMENT: add a module or fxn "reload_memory.py" which resets the python cache if the bot is restarted
             Currently doing a lot of that functionality in on_ready(), so just call stuff from there.
             do things like restart the confirm_maybe() loop

             - EventButtons are persistent through restart, but the field values are not; it thinks that it's my first entry
             and sends me a first-time entry info_embed(). on restart, need to check if name is in field values and if so
             set last_status to something.
                    do something like: if first_entry == True, check the fields to make sure you arent in it.

- IMPLEMENT: setup(bot) function to add cogs to the bot and maybe other stuff too
                should do a lot of this before bot.run()

- CHANGE:   Make on_command_error() send error messages as embeds to ctx

- IMPLEMENT: custom help command https://gist.github.com/InterStella0/b78488fb28cadf279dfd3164b9f0cf96
             - make it send to DM
             - if invoking message in guild channel, delete the message
