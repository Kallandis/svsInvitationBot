https://maah.gitbooks.io/discord-bots/content/storing-data/using-sql.html

- IMPLEMENT: edit_event()   # I have no idea what functionality this should have

- ISSUE: $help does not work in private channel
    ->  await destination.send(page)
    AttributeError: 'Object' object has no attribute 'send'
    where destination should be the ctx of $help

    (but sometimes it does! like right now)

- CHANGE:   move the user-defined global variables into a different file (config.txt)
            then populate those user-defined global vars in on_ready()

- CHANGE: let $create_event specify what time the event will be at, and also the title of the event
          Might have to consider timezones here.

- IDEA: pin the event (is this necessary?)

- CHANGE: global variable for event variables. if it is None, then populate it from the DB.
    -> reduces database reads. Should only have to read DB once per restart / new event
    -> will have to read DB every time if there is no event. but that's fine.

- IMPLEMENT: get a profile pic for the bot

- CHANGE:    a field can hold a maximum of 2048 characters. Average of ~10chars per user -> maximum of 200 people
            - current soln: just don't add names if it'd go over 2048 chars (not great, expect 200-250 people)
            - better soln: create 3 YES fields in bottom row, populate them one-by-one. maximum of ~600 people
                MAYBE, WHITESPACE, NO fields in top row

- CHANGE:   - When the fields become long, the buttons will be far below the event message.
            - soln: make the buttons be above the event message
            - blankMsg = await ctx.send('')
            - eventMsg = await ctx.send(embed=eventEmbed)
            - view = EventButtons(eventMsg)
            - await blankMsg.edit(view=view)

- IMPLEMENT:    logging to file for each module, with timestamps and error messages

- ISSUE:    after bot restarts, I don't think EventButtons work anymore. fixable or limitation? must test.


---------PRIORITY--------------

- IMPLEMENT: add a timestamp to the event embed

- IMPLEMENT: custom help command https://gist.github.com/InterStella0/b78488fb28cadf279dfd3164b9f0cf96

- IMPLEMENT: _build_csv() should put a lock on updating the database, and any writes that go out should be rejected
             with a response to their context indicating that the write failed

- IMPLEMENT: confirm_maybe()
    https://github.com/gawel/aiocron    use aiocron to check on the MAYBE's X hrs before event Start

- CHANGE: no longer building teams with logic. Instead just produce filtered lists (f.x. CE-A, CE-N, CE-F)

- IMPLEMENT: finalize_event()
             - use csv.writer: https://docs.python.org/3/library/csv.html#csv.writer

- IMPLEMENT: info_embed() should have a Message.mention() linking to the event embed

- IMPLEMENT: https://codezup.com/python-program-reader-writer-problem-mutex/
    implement thread-queueing for sql writes (way better than current "buffer" solution lmao)
    https://www.sqlite.org/wal.html or perhaps this is a solution?
    https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_in_executor or maybe this?
    *** https://pypi.org/project/aiosqlite/     aiosqlite?
        "aiosqlite allows interaction with SQLite databases on the main AsyncIO event loop without blocking execution of
         other coroutines while waiting for queries or data fetches. It does this by using a single, shared thread per
         connection. This thread executes all actions within a shared request queue to prevent overlapping actions."

- CHANGE:   get rid of all code-blocks for consistency, as they break string formatting.
            Can move the code-blocks to embeds instead to preserve the time, hyperlink formatting
            send various error messages as embeds?
            send "event **delete** successful" from $delete_event as embed?
