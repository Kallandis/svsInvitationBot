https://maah.gitbooks.io/discord-bots/content/storing-data/using-sql.html

- IMPLEMENT: edit_event()   # I have no idea what functionality this should have

- ISSUE: $help does not work in private channel
    ->  await destination.send(page)
    AttributeError: 'Object' object has no attribute 'send'
    where destination should be the ctx of $help

    (but sometimes it does! like right now)

- CHANGE:   move the user-defined global variables into a different file (config.txt)
            then populate those user-defined global vars in on_ready()

- CHANGE: let $create_event specify what time the event will be at, and also the title of the event
          Might have to consider timezones here.

- IMPLEMENT: get a profile pic for the bot

- CHANGE:   DEPRECATED FOR NOW (was not received well)
            - When the fields become long, the buttons will be far below the event message.
            - soln: make the buttons be above the event message
            - blankMsg = await ctx.send('')
            - eventMsg = await ctx.send(embed=eventEmbed)
            - view = EventButtons(eventMsg)
            - await blankMsg.edit(view=view)

- CHANGE:   the CSV can probably be formatted a little more conveniently. Leave out duplicate info like class, unit
            within certain categories? since they are always the same.

- IDEA: could make the delete/finalize event confirmation just require a react instead of typing "confirm"
        might avoid the rare bug where it just immediately fails?

---------PRIORITY--------------


- IMPLEMENT:    $bug DM command for reporting issues or bugs. Bot will log $bug in bugreports.log

- CHANGE:    a field can hold a maximum of 2048 characters. Average of ~10chars per user -> maximum of 200 people
            - soln: just keep adding YES fields with overflow. also, put the fields in a quote-block

- IMPLEMENT: custom help command https://gist.github.com/InterStella0/b78488fb28cadf279dfd3164b9f0cf96
             (and make it send to DM)

- IMPLEMENT: _build_csv() should put a lock on updating the database, and any writes that go out should be rejected
             with a response to their context indicating that the write failed
             - I think opening a file is blocking, so this is already accomplished?

- IMPLEMENT: https://codezup.com/python-program-reader-writer-problem-mutex/
    implement thread-queueing for sql writes (way better than current "buffer" solution lmao)
    https://www.sqlite.org/wal.html or perhaps this is a solution?
    https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_in_executor or maybe this?
    *** https://pypi.org/project/aiosqlite/     aiosqlite?
        "aiosqlite allows interaction with SQLite databases on the main AsyncIO event loop without blocking execution of
         other coroutines while waiting for queries or data fetches. It does this by using a single, shared thread per
         connection. This thread executes all actions within a shared request queue to prevent overlapping actions."

    https://github.com/Rapptz/asqlite
        Rapptz version of aiosqlite, so I'll use it bc it's rapptz
        https://discord.com/channels/336642139381301249/559455534965850142/881307252974321675

- CHANGE:   change error messages to embeds?

- ISSUE:    if two people press an EventButton at the same time, can it break the field due to async read-write of the
            field value? I think so. get ian to test.

            CONFIRMED, need to implement a queue here.

- IMPLEMENT:    confirm_maybe()
                in create_event, create a loop that will only run once, X hours before the event time
                    when it executes, DM "Maybe" reacts with a reminder

                edit_event() can restart the loop with a new value, if that functionality is desired

- ISSUE: EventButtons are persistent through restart, but the field values are not; it thinks that it's my first entry
         and sends me a first-time entry info_embed(). on restart, need to check if name is in field values and if so
         set last_status to something.

- CHANGE: move finalize_event, delete_event to eventInteraction.py EventButtons()

- CHANGE: make csv not include certain redundant cols to make it shorter (class, unit for the single units)
            after doing so, will need to redo some alignment stuff
